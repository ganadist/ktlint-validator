/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.example.kotlin.ast

import java.util.concurrent.Executors
import kotlin.system.exitProcess

private fun usage() {
    println("Usage: app rev1 [rev2]")
}

fun main(args: Array<String>) {
    val rev1: String
    val rev2: String

    when(args.size) {
        1, 2 -> {
            rev1 = args[0]
            rev2 = if (args.size == 2) args[1] else "HEAD"
        }
        else -> {
            usage()
            exitProcess(-1)
        }
    }

    val mergeBase = Utils.getMergeBase(rev1, rev2)
    val changed = Utils.getChangedFiles(mergeBase, rev2)

    val executor = Executors.newFixedThreadPool(
        Runtime.getRuntime().availableProcessors()
    )

    for (filename in changed) {
        executor.execute(KtCompare(rev1, rev2, filename))
    }
    executor.shutdown()
}